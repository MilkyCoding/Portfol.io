from nextcord import Embed, Color
import os

class MediaEmbeds:
    @staticmethod
    def add_media_missing_args() -> Embed:
        return Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description=(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.\n"
                "–ü—Ä–∏–º–µ—Ä: `/add-media –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞`\n\n"
                "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞."
            ),
            color=Color.red()
        )

    @staticmethod
    def no_attachments() -> Embed:
        return Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description=(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∫ —Å–æ–æ–±—â–µ–Ω–∏—é.\n"
                "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
                "‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (PNG, JPG, GIF)\n"
                "‚Ä¢ –í–∏–¥–µ–æ (MP4, WebM)"
            ),
            color=Color.red()
        )

    @staticmethod
    def media_add_result(project_name: str, added: list, errors: list = None) -> Embed:
        embed = Embed(
            title="üìé –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤",
            description=f"–ü—Ä–æ–µ–∫—Ç: **{project_name}**",
            color=Color.green() if added else Color.red()
        )

        if added:
            embed.add_field(
                name="‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã",
                value="\n".join(added),
                inline=False
            )

        if errors:
            embed.add_field(
                name="‚ùå –û—à–∏–±–∫–∏",
                value="\n".join(errors),
                inline=False
            )

        return embed

    @staticmethod
    def media_list(project_name: str, media: list) -> Embed:
        embed = Embed(
            title="üìé –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞",
            description=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ **{project_name}**:",
            color=Color.blue()
        )

        for i, m in enumerate(media, 1):
            embed.add_field(
                name=f"{i}. {os.path.basename(m.url)}",
                value=f"–¢–∏–ø: {m.type}",
                inline=False
            )

        return embed

    @staticmethod
    def media_removed(project_name: str) -> Embed:
        return Embed(
            title="‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω",
            description=f"–ú–µ–¥–∏–∞—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ **{project_name}**",
            color=Color.green()
        )

    @staticmethod
    def no_media_in_project(project_name: str) -> Embed:
        return Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description=f"–£ –ø—Ä–æ–µ–∫—Ç–∞ **{project_name}** –Ω–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤.",
            color=Color.red()
        )